<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[mongodb]]></title>
    <url>%2F2018%2F12%2F11%2Fmongodb%2F</url>
    <content type="text"><![CDATA[1.MongoDB������ 1.��������: sudo mongod 2.�����ͻ��� mongo 2.���ݿ�Ĳ���: 1.�鿴Ĭ�ϵ����ݿ� db 2.�鿴���е����ݿ� show dbs 3.�鿴���еļ���(��) show collections 4.�鿴�����е��ĵ�(��) db.xx.find() 5.ɾ�����ݿ� �Ƚ���,��db.dropDatabase() 3.����(��)�Ĳ���: 1.�鿴���еļ��� show collections 2.�������� db.createCollection(“��������”) 3.ɾ������ db.xx.drop()4.�ĵ����ݵ���ɾ��: 1.���ݵ����� null integer Double object timestamps Date ObjectID:1,2,3,4 1.ϵͳ�Զ����� 2.�ֶ�ָ�� string boolean Array 2.��������: db.xx.insert({key:Value}) //1.����һ������ db.one.insert( { _id:1, name:&quot;����&quot;, age:28 } ) db.one.insert( { name:&quot;����&quot;, age:88 } ) //2.���ֵ� ��ֵ dict = { _id:2, name:&quot;С����&quot;, age:18 } db.one.insert(dict) 3.ɾ�� db.xx.remove({����}) //1.ɾ������ db.one.remove({name:&quot;����&quot;}) //2.ɾ�����е�����(Ĭ�� ���������Ķ�ɾ��) db.one.remove({gender:true}) //3. ֻɾ�� ���������� ��һ�� justOne db.one.remove({gender:false},{justOne:true}) //4.ȫ��ɾ������ db.one.remove({}) 4.�� update db.xx.update({��������},{�޸�����}) //1.�޸� С�� ������ ����id //2. like //Ĭ�� �������ֶ�ɾ���� db.one.update({_id:4},{name:&quot;����&quot;}) db.one.update({_id:5},{like:&quot;������&quot;}) //2.ֻ���޸�ָ�����ֶ�; �����Ĳ���$set db.one.update({_id:7},{$set:{name:&quot;˪˪&quot;}}) //3. Ĭ�Ϸ���������ֻ�޸�һ��;ȫ���޸� multi //���������� �ĳ� 30˭ db.one.update( {gender:true}, {$set:{age:30}} ) //��Ů�������� ȫ���޸ĳ� 12�� db.one.update( {gender:false}, {$set:{age:12}}, {multi:true} ) 5.�ĵ��Ļ�����ѯ����: 1.������ѯ db.xx.find({��������}).pretty() 1.1: db.xx.find() �������е����� 1.2: �������е�Ů��:�������з������������� db.stu.find({gender:false}) 1.3:ֻ���ط��������ĵ�һ�� db.stu.findOne({gender:true}) 2.��������: $lt $gt $lte $ne db.xx.find({�ֶ�:{�����:ֵ}}) //1.ɸѡ�������20����� db.stu.find( { age:{$gt:20} } ) //2.ɸѡ���� С�ڵ���18��� db.stu.find( { age:{$lte:18} } ) //3. ���䲻���� 45�� db.stu.find( { age:{$ne:45} } ) 3.�߼�����: $and $or db.xx.find({�����:[{����1},{����1}]}) 1. $and ��ʵfindĬ�϶���������and db.stu.find( {age:16,gender:true} ) db.stu.find( { $and:[ {age:16}, {gender:true} ] } ) // �������20; ���� db.stu.find( { $and:[ {age:{$gt:20}}, {gender:true} ] } ) 2. $or // �����Լ20��,����false Ů�� db.stu.find( { $or:[ {age:{$gt:20}}, {gender:false} ] } ) 3. $and �� $or ���õĹ�ϵ // ��������45�������Ů��; �����������һ��� db.stu.find( { $ang:[ {$or:[ {age:{$lt:45}}, {gender:false} ] }, {hometown:&quot;�һ���&quot;} ] } ) // �����ɹŻ����Ǵ������� Ҫ���������ʿ db.stu.find({$and:[{$or:[{hometown:&quot;�ɹ�&quot;},{hometown:&quot;����&quot;}]},{gender:true}]}) 4.��Χ����:$in $nin db.xx.find({�ֶ�:{�����:[ֵ]}}) //1. 18 20 40���� db.stu.find( { age:{$in:[18,20,40]} } ) //2. ���� ���� ���� �ɹ� db.stu.find( {hometown:{$in:[&quot;����&quot;,&quot;�ɹ�&quot;]}} ) 5.�������ʽ: 1.db.xx.find({�ֶ�:/����/}) 2.db.xx.find({�ֶ�:{$regex:&quot;����&quot;}}) //1. �� db.stu.find({name:/��/}) db.stu.find({name:/liu/i}) db.stu.find( { name:{$regex:&quot;��&quot;} } ) //2. ���Դ�Сд $options db.stu.find( { name:{$regex:&quot;liu&quot;,$options:&quot;i&quot;} } ) 6.�Զ��庯��: db.xx.find({$where:������ֵ����������}) //����С�� 18���� //this ���������� db.stu.find( { $where:function () { return this.age &lt; 18 } } ) 6.��ѯ�������ʾ: skip(n): ������������ʾ limit(n): ������ʾ���� db.stu.find().skip(2).limit(3) ��� skip��limit���� ���һ���� ͶӰ: �����鿴���ֶ� db.xx.find({��ѯ����},{ͶӰ�������ֶ�:1}) db.stu.find({gender:false},{_id:1}) ����: ���� 1 ���� -1 sort({�ֶ�:1}) db.stu.find().sort({age:-1,_id:-1}) ͳ��:count() db.xx.count({����}) db.xx.find().count() db.stu.count({age:{$gt:30}}) db.stu.find({age:{$gt:30}}).count() ȥ��:distinct() db.xx.distinct(&quot;ȥ�ص��ֶ�&quot;,{����}) // ȡ������С��60��һ�� �˵ļ��� db.stu.distinct(&quot;hometown&quot;,{age:{$lt:60}}) 7.python��MongoDB �Ľ��� 1. 127.0.0.1 2. 27017 3.�������ݿ� �ͻ��� 4. ���ݿͻ��� �������ݿ� 5. �������� 6. д������]]></content>
  </entry>
  <entry>
    <title><![CDATA[first]]></title>
    <url>%2F2018%2F12%2F11%2Ffirst%2F</url>
    <content type="text"><![CDATA[奈何桥边，一位女子跪在孟婆面前哀求：婆婆，我可不可以不喝这碗汤，我不想忘了他。孟婆：人生苦楚，总逃不脱一个情字，你又何必如此执着？女子哭：地府中人，自然不懂人间情爱？孟婆放下手中汤碗，望着天上幽幽一叹：我怎会不懂，那时，他还不是月老，我也还不是孟婆]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
